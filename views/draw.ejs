<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
        crossorigin="anonymous"></script>

      <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

    <!-- Bootstrap icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css">

    <script
      src="https://code.jquery.com/jquery-3.6.0.min.js"
      integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
      crossorigin="anonymous"
    ></script>


    <script async src="https://www.googletagmanager.com/gtag/js?id=G-S5M9QB9WB7"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-S5M9QB9WB7');
    </script>

    <script
      src="https://cdn.socket.io/4.5.3/socket.io.min.js"
      integrity="sha384-WPFUvHkB1aHA5TDSZi6xtDgkF0wXJcIIxXhC6h8OT8EH3fC5PWro5pWJ1THjcfEi"
      crossorigin="anonymous"
    ></script>
    <title>able 작업공간</title>
    <meta charset="UTF-8">
    <body>
      <% include ./layout/sellerloginheader.ejs %>
      <% include ./layout/sellercategory.ejs %>
  
      <div>
        <div class="row" >
          <div class="col-2" >
            <!-- 안에 들어가는 내용의 height이 500px 미만이면 style="height: 500px" 이렇게 설정-->
            <% include ./layout/sellermenubar.ejs %>
          </div>
          <div class="col-10" >
            <div class="row">
              <h6 id="navtext">HOME > 상품제작 </h6>
            </div>
            <div class="row">

            <div class="col" style = "float:left" >
            <div>
            브러쉬 크기 <input id="input" type="number" min="0" max="100" value="1"></input>
            <button onclick="colorChange('black')" style="background-color: black; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('blue')" style="background-color: blue; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('red')" style="background-color: red; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('green')" style="background-color: green; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('pink')" style="background-color: pink; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('yellow')" style="background-color: yellow; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('skyblue')" style="background-color: skyblue; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('violet')" style="background-color: violet; width: 20px; height: 20px; border: solid 1px;"></button>
            <button onclick="colorChange('lime')" style="background-color: lime; width: 20px; height: 20px; border: solid 1px;"></button>
            <button class="btn btn-sm btn-outline-secondary" onclick="colorChange('white')">지우개</button>
            <button class="btn btn-sm btn-outline-secondary" onclick="clearAll()">전체지우기</button>
            </div>
          <br>
            <canvas id='canvas' width='700' height='450' style="border-radius: 10px; border:2px dashed #191B5E"></canvas>
            <button class="btn btn-sm save-btn" style="background-color: #191B5E; color: #ffffff;">이미지 저장</button>
            <button class="btn btn-sm save-file-btn" style="background-color: #191B5E; color: #ffffff;" onclick="savefile()" >이미지 파일 저장</button>
            <br><br>
            </div>
            <div class="col" style = "float:right">
              <!-- 채팅 -->
              <div>                
                작업방 채팅
                <button onclick="invite()" class="btn btn-sm"style="color: #ffffff; background-color : #191B5E; margin-left: 10px; ">초대하기</button>
              </div>
              <br>
              <div class="col-12" id="workmsgArea" style="margin-left: 10px;  width:70%;">
                <% for(var i=0; i<chats.length; i++){ var chat =  chats[i]; %>
                  <% if(chat.senderId == senderId) { %>
                        <div class='col-12'>
                            <div class='message-me'>
                                <b>
                                    <tr>
                                        <td>🗨️ <%=chat.senderId%></td> 
                                        <td>:</td>
                                        <td><%=chat.message%></td>
                                    </tr>
                                </b>
                            </div>
                        </div>
                        <%}else{%>
                        <div class='col-12'>
                            <div class='message'>
                                <b>
                                    <tr>
                                      <td>🗨️ <%=chat.senderId%></td> 
                                      <td>:</td>
                                      <td><%=chat.message%></td>
                                    </tr>
                                </b>
                            </div>
                        </div>
                        <%}}%>
              </div>
              <br>
              <div class="col-12" >
                <div class="row mt-1">
                  <input id="textMessage" class="textMessage form-control form-control-sm" type="text" placeholder="메시지를 입력하세요." style="margin-left: 10px; float: right; width:60%;"
                      onkeyup="if(window.event.keyCode==13){sendMessage()}"/>
                <input onclick="sendMessage()" class="btn btn-sm ml-1" value="Send" type="button" style="color: #ffffff; background-color : #191B5E; float: right; margin-left: 10px; width: auto; ">
                </div>
                
              </div>  
            </div>
            </div>
          </div>
      </div>
</div>
</div>
</div>

</body>
<% include ./layout/footer.ejs %>

</html>

<script>
  const socket = io();
  socket.on("connect", () => {
    setBackground();
    socket.emit("workroomId",'<%=id%>');

  });

  socket.on("drawmsg<%=id%>", (data) => {
      
      str = "<div class='col-12'>";
      str += "<div class='message'>";
      str += "<b>🗨️" + data.sender + " : " + data.message + "</b>";
      str += "</div></div>";
      $("#workmsgArea").prepend(str);
            
      //console.log(data.id, "에서 보낸 메시지 : ", data.message);
    });

  const sendMessage = () => {
      let data = {roomId : '<%=id%>', sender : '<%=senderId%>', msg : document.getElementById("textMessage").value};
      if(data.msg != ""){
        str = "<div class='col-12'>";
        str += "<div class='message-me'>";
        str += "<b>🗨️" + '<%=senderId%>' + " : " +document.getElementById("textMessage").value+ "</b>";
        str += "</div></div>";
        $("#workmsgArea").prepend(str);
        socket.emit("drawchat", data);
        document.getElementById("textMessage").value = "";
      }
    };

    const invite = () => {
      const str = "http://" + location.host + "/draw/" +<%=id%>;
      navigator.clipboard.writeText(str);
      alert("URL이 클립보드에 복사되었습니다");
    };

    const savefile = () => {

      const url = canvas.toDataURL('image/png',1.0);
      const link = document.createElement("a");
      link.href = url;
      link.download = "<%=title%>";
      link.click();
    };

  var pos = {
      drawable : false,
      x : -1,
      y : -1,
  };

  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');
  var ctx1 = canvas.getContext('2d');
  var rect = canvas.getBoundingClientRect();  // 터치 스크린
  const saveBtn = document.querySelector('.save-btn');
  const resultImage = document.querySelector('.result-image');

  // var backImg = new Image();
  // backImg.src = "/drawing/<%=imgurl%>";
  // ctx.drawImage(backImg,0,0,canvas.width, canvas.height);

  function setBackground()
  {
    var image = new Image();
    image.onload = function() {
      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
    }
    image.src = "/images/<%=imgurl%>";
  }


  socket.on("draw_start<%=id%>",(e) => {  
    var temp_width = ctx1.lineWidth;
    var temp_color = ctx1.strokeStyle;
    ctx1.lineWidth = e.width;
    ctx1.strokeStyle = e.color;
    pos.drawable = true;
    ctx1.beginPath();
    ctx1.moveTo(e.x, e.y);
    ctx1.lineWidth = temp_width;
    ctx1.strokeStyle = temp_color;
  });


  socket.on("draw<%=id%>",(e) => {
    var temp_width = ctx1.lineWidth;
    var temp_color = ctx1.strokeStyle;
    ctx1.lineWidth = e.width;
    ctx1.strokeStyle = e.color;
    ctx1.lineTo(e.x, e.y);
    ctx1.stroke();
    ctx1.lineWidth = temp_width;
    ctx1.strokeStyle = temp_color;
  });

  socket.on("draw_end<%=id%>",(e) => {
    pos.drawable = false;
    pos.x = -1;
    pos.y = -1;
  });

  socket.on("draw_clear<%=id%>", (e) => {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
  });

  // 전체 지우기
  function clearAll(){
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      socket.emit("drawclear");
  }

  // 스타일 추가
  input.oninput = function(){
      ctx.lineWidth = input.value;
  }
  ctx.lineCap = 'round';
  ctx.lineJoin = 'round';

  function colorChange(color){
      ctx.strokeStyle = color;
  }

  canvas.addEventListener("mousedown", listener);
  canvas.addEventListener("mousemove", listener);
  canvas.addEventListener("mouseup", listener);
  canvas.addEventListener("mouseout", listener);

  /// 터치 스크린
  canvas.addEventListener("touchstart", listener);
  canvas.addEventListener("touchmove", listener);
  canvas.addEventListener("touchend", listener);

  function listener(e){
      switch(e.type){      
          case "mousedown":
              drawStart(e);
              break;
          case "mousemove":
              if(pos.drawable){
                  draw(e);
              }
              break;
          case "mouseout":
          case "mouseup":
              drawEnd();
              break;
          case "touchstart":
              touchStart(e);
              break;
          case "touchmove":
              if(pos.drawable)
                  touch(e);
              break;
          case "touchend":
              drawEnd();
              break;
          default:
      }
  }

  function drawStart(e){
      pos.drawable = true;
      ctx.beginPath();
      pos.x = e.offsetX;
      pos.y = e.offsetY;
      ctx.moveTo(pos.x, pos.y);
      data = {x:pos.x,y:pos.y,width:ctx.lineWidth,color:ctx.strokeStyle};
      socket.emit("drawstart",data);
  }
  function touchStart(e){
      pos.drawable = true;
      ctx.beginPath();
      pos.x = e.touches[0].pageX - rect.left
      pos.y = e.touches[0].pageY - rect.top
      ctx.moveTo(pos.x, pos.y);
      data = {x:pos.x,y:pos.y,width:ctx.lineWidth,color:ctx.strokeStyle};
  }
  function draw(e){
      ctx.lineTo(e.offsetX, e.offsetY);
      pos.x = e.offsetX;
      pos.y = e.offsetY;
      ctx.stroke();
      data = {x:pos.x,y:pos.y,width:ctx.lineWidth,color:ctx.strokeStyle};
      socket.emit("drawing",data);
  }
  function touch(e){
      ctx.lineTo(e.touches[0].pageX - rect.left, e.touches[0].pageY - rect.top);
      pos.x = e.touches[0].pageX - rect.left;
      pos.y = e.touches[0].pageY - rect.top;
      ctx.stroke();
      data = {x:pos.x,y:pos.y,width:ctx.lineWidth,color:ctx.strokeStyle};
  }
  function drawEnd(){
      pos.drawable = false;
      pos.x = -1;
      pos.y = -1;
      socket.emit("drawend");
  }

  function createImage(){
    const url = canvas.toDataURL('image/png',1.0);
    console.log(url);
    var blobBin = atob(url.split(',')[1]);	// base64 데이터 디코딩
    var array = [];
    for (var i = 0; i < blobBin.length; i++) {
        array.push(blobBin.charCodeAt(i));
    }
    //url = new Uint8Array(array);

    var file = new Blob([new Uint8Array(array)], {type: 'image/png'});	// Blob 생성

    var formdata = new FormData();	// formData 생성
    formdata.append("file",file);	// file data 추가 */

    $.ajax({
      type: 'post',
      url: '/draw/save/<%=id%>',
      cache: false,
      data: formdata,
      processData: false,
      contentType: false,
      success: function (data) {
        alert('Uploaded !!')
      }
    });

  }
  saveBtn.addEventListener('click', createImage);
</script>